{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["D:/Workspace/Nextjs/06-onwards-to-a-bigger-project-starting-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetUpDetail","MeetUpDetails","props","image","title","address","description"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAIA,KAAK,CAACC,KADnB;AAEI,IAAA,KAAK,EAAID,KAAK,CAACE,KAFnB;AAGI,IAAA,OAAO,EAAIF,KAAK,CAACG,OAHrB;AAII,IAAA,WAAW,EAAIH,KAAK,CAACI;AAJzB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQL,a;;AAwDT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetUpDetails(props) {\r\n    return ( \r\n        <MeetUpDetail \r\n            image = {props.image}\r\n            title = {props.title}\r\n            address = {props.address}\r\n            description = {props.description}\r\n        />\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n    const meetupsCollection = db.collection('meetups')\r\n    const listIds = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n    console.log('listIds: ', listIds)\r\n    client.close()\r\n\r\n    return {\r\n        paths: \r\n            listIds.map((data) => {\r\n                return {\r\n                    params: {\r\n                        meetupId: data._id.toString()\r\n                    }\r\n                }\r\n            }),       \r\n        fallback: false\r\n    }\r\n}\r\n\r\n// // Static Generation\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n    console.log('meetupId', meetupId);\r\n    // fetch data, call API\r\n    const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n    const meetupsCollection = db.collection('meetups')\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n    console.log('selectedMeetup: ', selectedMeetup)\r\n    client.close()\r\n\r\n    return {\r\n        props: {\r\n            image: selectedMeetup.image,\r\n            title: selectedMeetup.title,\r\n            address: selectedMeetup.address,\r\n            description: selectedMeetup.description,\r\n            id: meetupId\r\n        },\r\n        // revalidate: 200000\r\n    }\r\n}\r\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}