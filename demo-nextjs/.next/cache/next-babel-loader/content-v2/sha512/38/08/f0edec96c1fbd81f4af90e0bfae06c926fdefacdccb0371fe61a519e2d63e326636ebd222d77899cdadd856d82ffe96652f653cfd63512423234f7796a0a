{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Nextjs\\\\nextjs-first-project\\\\demo-nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["D:/Workspace/Nextjs/nextjs-first-project/demo-nextjs/pages/[meetupId]/index.js"],"names":["Head","MeetUpDetail","MeetUpDetails","props","title","image","address","description"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,YAAD;AACA,MAAA,KAAK,EAAID,KAAK,CAACE,KADf;AAEA,MAAA,KAAK,EAAIF,KAAK,CAACC,KAFf;AAGA,MAAA,OAAO,EAAID,KAAK,CAACG,OAHjB;AAIA,MAAA,WAAW,EAAIH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAaH;;KAdQL,a;;AA6DT,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails(props) {\n    return ( \n        <>\n            <Head>\n                <title>{props.title}</title>\n            </Head>\n            <MeetUpDetail \n            image = {props.image}\n            title = {props.title}\n            address = {props.address}\n            description = {props.description}\n        />\n        </>\n    );\n}\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority')\n    const db = client.db()\n    const meetupsCollection = db.collection('meetups')\n    const listIds = await meetupsCollection.find({}, {_id: 1}).toArray()\n    console.log('listIds: ', listIds)\n    client.close()\n\n    return {\n        paths: \n            listIds.map((data) => {\n                return {\n                    params: {\n                        meetupId: data._id.toString()\n                    }\n                }\n            }),       \n        fallback: false\n    }\n}\n\n// // Static Generation\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId\n    console.log('meetupId', meetupId);\n    // fetch data, call API\n    const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority')\n    const db = client.db()\n    const meetupsCollection = db.collection('meetups')\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\n    console.log('selectedMeetup: ', selectedMeetup)\n    client.close()\n\n    return {\n        props: {\n            image: selectedMeetup.image,\n            title: selectedMeetup.title,\n            address: selectedMeetup.address,\n            description: selectedMeetup.description,\n            id: meetupId\n        },\n        // revalidate: 200000\n    }\n}\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}