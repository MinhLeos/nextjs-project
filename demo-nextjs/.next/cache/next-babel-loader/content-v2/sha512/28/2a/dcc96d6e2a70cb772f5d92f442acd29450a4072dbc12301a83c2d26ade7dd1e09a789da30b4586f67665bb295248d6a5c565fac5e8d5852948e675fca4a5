{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\Nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const listIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log('listIds: ', listIds);\n  client.close();\n  return {\n    paths: listIds.map(data => {\n      return {\n        params: {\n          meetupId: data._id.toString()\n        }\n      };\n    }),\n    fallback: false\n  };\n} // // Static Generation\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log('meetupId', meetupId); // fetch data, call API\n\n  const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log('selectedMeetup: ', selectedMeetup);\n  client.close();\n  return {\n    props: {\n      image: selectedMeetup.image,\n      title: selectedMeetup.title,\n      address: selectedMeetup.address,\n      description: selectedMeetup.description,\n      id: meetupId\n    } // revalidate: 200000\n\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["D:/Workspace/Nextjs/06-onwards-to-a-bigger-project-starting-project/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Head","MongoClient","ObjectId","MeetUpDetail","MeetUpDetails","props","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","listIds","find","_id","toArray","console","log","close","paths","map","data","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,YAAD;AACA,MAAA,KAAK,EAAID,KAAK,CAACE,KADf;AAEA,MAAA,KAAK,EAAIF,KAAK,CAACC,KAFf;AAGA,MAAA,OAAO,EAAID,KAAK,CAACG,OAHjB;AAIA,MAAA,WAAW,EAAIH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAaH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,OAAzB;AACAL,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACHC,IAAAA,KAAK,EACDP,OAAO,CAACQ,GAAR,CAAaC,IAAD,IAAU;AAClB,aAAO;AACHC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EAAEF,IAAI,CAACP,GAAL,CAASU,QAAT;AADN;AADL,OAAP;AAKH,KAND,CAFD;AASHC,IAAAA,QAAQ,EAAE;AATP,GAAP;AAWH,C,CAED;;AACA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,QAAxB,EAF0C,CAG1C;;AACA,QAAMhB,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMiB,cAAc,GAAG,MAAMlB,iBAAiB,CAACmB,OAAlB,CAA0B;AAACf,IAAAA,GAAG,EAAEhB,QAAQ,CAACyB,QAAD;AAAd,GAA1B,CAA7B;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCW,cAAhC;AACArB,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACHjB,IAAAA,KAAK,EAAE;AACHE,MAAAA,KAAK,EAAEyB,cAAc,CAACzB,KADnB;AAEHD,MAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAFnB;AAGHE,MAAAA,OAAO,EAAEwB,cAAc,CAACxB,OAHrB;AAIHC,MAAAA,WAAW,EAAEuB,cAAc,CAACvB,WAJzB;AAKHyB,MAAAA,EAAE,EAAEP;AALD,KADJ,CAQH;;AARG,GAAP;AAUH;AACD,eAAevB,aAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetUpDetails(props) {\r\n    return ( \r\n        <>\r\n            <Head>\r\n                <title>{props.title}</title>\r\n            </Head>\r\n            <MeetUpDetail \r\n            image = {props.image}\r\n            title = {props.title}\r\n            address = {props.address}\r\n            description = {props.description}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n    const meetupsCollection = db.collection('meetups')\r\n    const listIds = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n    console.log('listIds: ', listIds)\r\n    client.close()\r\n\r\n    return {\r\n        paths: \r\n            listIds.map((data) => {\r\n                return {\r\n                    params: {\r\n                        meetupId: data._id.toString()\r\n                    }\r\n                }\r\n            }),       \r\n        fallback: false\r\n    }\r\n}\r\n\r\n// // Static Generation\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n    console.log('meetupId', meetupId);\r\n    // fetch data, call API\r\n    const client = await MongoClient.connect('mongodb+srv://minh1990:minh10081990@cluster0.xuz3r0w.mongodb.net/meetupdb?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n    const meetupsCollection = db.collection('meetups')\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n    console.log('selectedMeetup: ', selectedMeetup)\r\n    client.close()\r\n\r\n    return {\r\n        props: {\r\n            image: selectedMeetup.image,\r\n            title: selectedMeetup.title,\r\n            address: selectedMeetup.address,\r\n            description: selectedMeetup.description,\r\n            id: meetupId\r\n        },\r\n        // revalidate: 200000\r\n    }\r\n}\r\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}